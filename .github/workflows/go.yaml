name: Go

on: [push]

env:
  GO_VERSION: '1.20'

jobs:
  build:
    name: build go binaries
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go get ./...
        working-directory: ./code/backend/api

      - name: Build
        run: go build -o build -v ./cmd/...
        working-directory: ./code/backend/api

  lint:
    name: lint go files
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          args: --config ./code/backend/api/.golangci.yaml
          version: 'v1.51'

  test:
    name: test go files
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go get ./...
        working-directory: ./code/backend/api

      - name: Run tests with code coverage report
        run: go test -v ./internal/... -coverprofile="coverage.out"
        working-directory: ./code/backend/api

      - name: Generate code coverage report html
        run: go tool cover -html="coverage.out" -o coverage.html
        working-directory: ./code/backend/api

      - name: Upload code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage-report
          path: |
            ./code/backend/api/coverage.out
            ./code/backend/api/coverage.html
